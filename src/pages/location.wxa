<script>
import { Page, toast } from "@wxa/core";
import Network from "../utils/network";
import LocationUtils from "../utils/location";

@Page
export default class Location {
  mapState = {
    location: state => state.location
  };

  data = {
    selectedCityIndex: 0,
    citys: [],
    hospitals: {}
  };

  async onLoad() {
    try {
      //获取地理位置
      let location = await LocationUtils.mustGetLocation();

      //获取城市和位置
      let { citys, hospitals } = await Network.RequestApi(
        "CITY_AND_HOSPITAL_WITH_DISTANCE",
        location
      );

      let setData = { citys, hospitals };

      citys.forEach((value, index) => {
        if (value.id == this.data.location.cityId) {
          Object.assign(setData, { selectedCityIndex: index });
        }
      });

      this.setData(setData);
    } catch (e) {
      if (e.msg) {
        toast(e.msg);
      } else {
        toast("初始化城市信息失败");
      }
    }
  }

  onUnload() {
    this.$eventbus.emit("changeLocationSelected");
  }

  onSelectCityChanged(e) {
    let city = this.data.citys[e.detail.value];
    if (city) {
      this.setData({
        selectedCityIndex: e.detail.value
      });
      this.$store.dispatch({
        type: "selectedCityUpdate",
        payload: {
          cityName: city.name,
          cityId: city.id,
          hospitalName: "",
          hospitalId: "0",
          distance: ""
        }
      });
    }
  }

  onSelectHospitalChange(e) {
    let hospitals = this.data.hospitals[this.data.location.cityId];
    if (hospitals) {
      hospitals = hospitals.filter(item => {
        return item.id == e.detail.value;
      });
    }
    if (hospitals[0]) {
      this.$store.dispatch({
        type: "selectedHospitalUpdate",
        payload: {
          hospitalName: hospitals[0].name,
          hospitalId: hospitals[0].id,
          distance: hospitals[0].distance
        }
      });
    }
  }

  onShowHospitalDetail(e) {
    if (e.currentTarget.dataset.id) {
      this.$router.push(
        "/pages/hospital/detail/?id=" + e.currentTarget.dataset.id
      );
    }
  }

  onComplateSelect() {
    this.$router.goBack();
  }
}
</script>

<config>
{
    "navigationBarTitleText": "选择位置和门店",
    "usingComponents": {
        "wux-icon": "../wux-weapp/dist/icon/index",
        "wux-selectable": "../wux-weapp/dist/selectable/index",
        "wux-cell-group": "../wux-weapp/dist/cell-group/index",
        "wux-cell": "../wux-weapp/dist/cell/index"
     }
}
</config>

<template>
  <view class="container">
    <view id="city" class="blank_left_right">
      <picker
        range="{{citys}}"
        range-key="name"
        value="{{selectedCityIndex}}"
        bindchange="onSelectCityChanged"
      >
        <view class="selected_name text_main">
          <text class="text_gray">已选择城市：</text>
          {{location.cityName}}
          <wux-icon type="ios-arrow-down" size="16" class="space_left"/>
        </view>
      </picker>
      <view class="select_complate text_main wux-balanced" catch:tap="onComplateSelect">完成</view>
    </view>
    <view>
      <wux-cell-group title="当前城市下门店">
        <block wx:for="{{ hospitals[location.cityId] }}" wx:key>
          <wux-cell>
            <wux-selectable
              slot="header"
              wux-class="checkbox"
              type="radio"
              value="{{ item.id }}"
              checked="{{ location.hospitalId == item.id }}"
              controlled
              bind:change="onSelectHospitalChange"
            />
            <view class="hospital" catch:tap="onShowHospitalDetail" data-id="{{ item.id }}">
              <view class="hospital_info">
                <view class="hospital_name text_main">
                  {{item.name}}
                  <text class="hospital_distance text_desc">（距您 {{item.distance}}）</text>
                </view>
                <view class="hospital_service text_desc text_small">服务内容：{{item.service}}</view>
                <view class="hospital_opentime text_desc text_small">营业时间：{{item.openTime}}</view>
                <view class="hospital_address text_desc text_small">地址：{{item.address}}</view>
              </view>
              <view class="hospital_link">
                <wux-icon type="ios-arrow-forward" size="18" color="#999"></wux-icon>
              </view>
            </view>
          </wux-cell>
        </block>
      </wux-cell-group>
    </view>
  </view>
</template>

<style lang="scss">
#city {
  width: 100%;
  height: 80rpx;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  box-sizing: border-box;
  background-color: #ffffff;
  text-align: center;
}
.hospital {
  display: flex;
  width: 100%;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  box-sizing: border-box;

  .hospital_info {
    .hospital_name {
      font-weight: bold;
      line-height: 60rpx;
    }
    .hospital_distance {
      font-weight: normal;
    }
    .hospital_service,
    .hospital_opentime,
    .hospital_address {
      line-height: 50rpx;
    }
  }
  .hospital_link {
    flex: 1 1 0;
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: center;
    box-sizing: border-box;
  }
}

.checkbox {
  width: 80rpx;
  height: 140rpx;
  display: flex !important;
  align-items: center;
}
</style>