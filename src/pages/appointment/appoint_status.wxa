<script>
import {Page,toast} from "@wxa/core"
import {hospitals} from './data'

@Page
export default class AppointStatus {
    mapState = {
        location: state => state.location
    };
    data={
        items:null,
        serviceTypeNames:null,
        workTimes:null,
        appointTime:null,
        _isAdd:false
    };

    onLoad(options){
        this.$eventbus.on('appointment_items_changed_event',options=>this.setItems(options.items));
        this.$eventbus.on('appoint_time_changed_event',options=>this.setAppointedTime(options.appointTime))
        let curAppointment=getApp().globalData.app_appointment;
        let appointedTime=null;
        if(options.state=="add"){
            this.data._isAdd=true;
            appointedTime='';
        }else{
            this.data._isAdd=false;
            appointedTime=curAppointment.startTime;
        }
        let hospital=hospitals.find(p=>p.hospitalId==curAppointment.hospitalId);
        this.$store.dispatch({
            type: "selectedCityUpdate",
            payload: hospital
        });
        this.setItems(curAppointment.items);
        let serviceTypes=this.getServiceItems();
        let typeNames=serviceTypes.map(p=>p.typeName).join(',');
        let workTimes=serviceTypes.map(p=>p.startTime+'-'+p.stopTime+'('+p.typeName+')');
        let startWorkTime="08:30";
        let stopWorkTime="21:00";
        if(serviceTypes && serviceTypes.length>0){
            startWorkTime=serviceTypes[0].startTime;
            stopWorkTime=serviceTypes[0].stopTime;
            serviceTypes.forEach(p=>{
                if(p.startTime<startWorkTime){
                    startWorkTime=p.startTime;
                }
                if(p.stopTime>stopWorkTime){
                    stopWorkTime=p.stopTime;
                }
            });
        }
        this.setData({
            appointTime:appointedTime,
            workStartTime:startWorkTime,
            workStopTime:stopWorkTime,
            serviceTypeNames:typeNames,
            workTimes:workTimes
        });
    }

    getServiceItems(){
        let serviceTypes=[
            {
                'typeId':1,
                'typeName':'美容,洗澡',
                'startTime':'08:00',
                'stopTime':'17:00'
            },
            {
                'typeId':2,
                'typeName':'诊疗',
                'startTime':'09:00',
                'stopTime':'18:00'
            }
        ];
        return serviceTypes;
    }

    setAppointedTime(timeText){
        this.setData({
            appointTime:timeText
        });
    }

    setItems(items){
        if(!items){
            console.log("items is null");
            return;
        }
        let itemDesc=items.map(item=>{
            return item.productName;
        }).join(',');
        this.setData({
            items:items,
            itemDesc:itemDesc
        });
    }
    onShowSelectLocation() {
        this.$router.push("/pages/location");
    }
    onSelectItems(){
        getApp().globalData.selectedAppointmentItems=this.data.items;
        this.$router.push("./appoint_item");
    }
    onSelectTime(){
        this.$router.push('./time_selector?appointTime='+this.data.appointTime+"&workStartTime="+this.data.workStartTime+"&workStopTime="+this.data.workStopTime);
    }
    submitAppointment(){
        if(!this.data.items ||this.data.items.length<=0){
            toast("请选择预约项目");
            return;
        }
        if(!this.data.appointTime){
            toast("请选择预约时间");
            return;
        }
        let appointData={
            'itemIds':this.data.items.map(p=>p.productId),
            'appointedTime':this.data.appointTime,
            'hospitalId':this.data.location.hospitalId
        };
        //todo 提交到服务器
        if(this.data._isAdd){

        }else{

        }
    }
}
</script>
<config>
{
    "navigationBarTitleText": "服务",
    "usingComponents": {
        "wux-cell-group": "../../wux-weapp/dist/cell-group/index",
        "wux-cell": "../../wux-weapp/dist/cell/index",
        "wux-icon": "../../wux-weapp/dist/icon/index",
        "wux-button": "../../wux-weapp/dist/button/index"
    }
}
</config>
<template>
  <view class="container space_left space_right text_main">
    <wux-cell-group>
      <wux-cell is-link extra="修改" bind:click="onShowSelectLocation">
          <view class="vertical_container">
            <view class="landscape_container">
                <wux-icon type="md-book"></wux-icon>
                <view class="space_left">{{location.hospitalName}}({{location.distance}})</view>
            </view>
            
            <view class="space_top">
                服务内容:{{serviceTypeNames}}
            </view>
            <view class="landscape_container space_top">
                <view>营业时间:</view>
                <view class="vertical_container">
                   <block wx:for={{workTimes}} wx:key="*this">
                       <view>{{item}}</view>
                   </block>   
                </view>
            </view>
          </view>
      </wux-cell>
      <wux-cell is-link extra="修改" bind:click="onSelectItems">
        <view class="landscape_container space_top">
            <wux-icon type="md-book"></wux-icon>
            <view class="space_left">预约-{{itemDesc}}</view>
        </view>
      </wux-cell>
      <wux-cell is-link extra="修改" bind:click="onSelectTime">
          <view class="landscape_container">
                <wux-icon type="md-book"></wux-icon>
                <view class="space_left">预约时间:{{appointTime}}</view>
            </view>
      </wux-cell>
    </wux-cell-group>
    <wux-button class="space_top" block type="balanced" bind:click="submitAppointment">提交预约</wux-button>
  </view>
</template>
<style lang="scss">
@import "../../css/main";
.fill{
    flex:1 1 auto;
}
.vertical_container{
    display: flex;
    flex-direction: column;
}

</style>