<script>
import{Page} from "@wxa/core"
import { getDateDiff, getDayInWeek, getMonthText, getDayText,getSharpClocks} from "../../utils/time"
import {DateFormat} from '../../utils/tools'

@Page
export default class TimeSelector{
    data={
        dates:null,
        _startWorkTime:null,
        _stopWorkTime:null,
        _appointedTime:null,
        appointedTimeText:'',
    };
    onLoad(options){
        this.data._startWorkTime=options.workStartTime;
        this.data._stopWorkTime=options.workStopTime;
        let appointedTime='';
        if(options.appointTime){
            appointedTime=new Date(options.appointTime);
        }
        if(appointedTime){
            this.setAppointTime(appointedTime);
        }
        let selectedTabDate=appointedTime?appointedTime:new Date();
        let selectedTabDateText=DateFormat(selectedTabDate,"yyyy-MM-dd");
        let dates=this.createDates();
        let clocks=getSharpClocks(selectedTabDate,this.data._startWorkTime,this.data._stopWorkTime);
        // for(let i=0;i<3;i++){
        //     let index=parseInt(Math.random()*clocks.length);
        //     clocks[index].preserved=true;
        // }
        
        //将本次的预约时间置为选中状态
        if(this.data._appointedTime){
            //已预约的具体时间
            let appointDetail=DateFormat(this.data._appointedTime,"yyyy-MM-dd hh:mm:ss");
            let selectedItem=clocks.find(p=>p.dateText==appointDetail);
            if(selectedItem && !selectedItem.preserved){
                selectedItem.selected=true;
            }
        }
        this.setData({
            dates:dates,
            clocks:clocks,
            currentTabDateText:selectedTabDateText,
            appointedTimeText:this.data.appointedTimeText
        });
    }
    //构造未来两周可以预约的日期
    createDates(){
        let today=new Date();
        let dates=[];
        for(let i=0;i<14;i++){
            let curDate=getDateDiff(i);
            let detail=DateFormat(curDate,"yyyy-MM-dd");
            let weekInDay=getDayInWeek(curDate);
            let month=getMonthText(curDate);
            let day=getDayText(curDate);
            let date={
                'index':i,
                'dateText':detail,
                'weekInDay':weekInDay,
                'monthDay':month+'.'+day
            }
            dates.push(date);
        }
        return dates;
    }

    onTabChanged(e){
        let selectedDate=new Date(e.detail.key);
        let clocks=getSharpClocks(selectedDate,this.data._startWorkTime,this.data._stopWorkTime);
        //将本次的预约时间置为选中状态
        if(this.data._appointedTime){
            //已预约的具体时间
            let appointDetail=DateFormat(this.data._appointedTime,"yyyy-MM-dd hh:mm:ss");
            let selectedItem=clocks.find(p=>p.dateText==appointDetail);
            if(selectedItem && !selectedItem.preserved){
                selectedItem.selected=true;
            }
        }
        this.setData({
                currentTabDateText:e.detail.key,
                clocks:clocks
        });
    }

    onTimeSelected(e){
        let index=e.currentTarget.dataset.id;
        let item=this.data.clocks[index];
        if(item.preserved){
            return;
        }
        this.data.clocks.forEach(p=>p.selected=false);
        item.selected=true;
        this.setAppointTime(item.date);
        this.setData({
            clocks:this.data.clocks,
            appointedTimeText:this.data.appointedTimeText
        });
        this.$eventbus.emit('appoint_time_changed_event',{'appointTime':DateFormat(item.date,"yyyy-MM-dd hh:mm:ss")});
    }

    setAppointTime(date){
        this.data._appointedTime=date;
        this.data.appointedTimeText=DateFormat(date,"yyyy-MM-dd hh:mm");
    }
}
</script>
<config>
{
    "navigationBarTitleText": "预约时间",
    "usingComponents": {
        "wux-grids": "../../wux-weapp/dist/grids/index",
        "wux-grid": "../../wux-weapp/dist/grid/index",
        "wux-tabs": "../../wux-weapp/dist/tabs/index",
        "wux-tab": "../../wux-weapp/dist/tab/index",
        "wux-row": "../../wux-weapp/dist/row/index",
        "wux-col": "../../wux-weapp/dist/col/index"
    }
}
</config>
<template>
<view class="container">
    <view class="space_top space_left text_desc">请选择到店时间:{{appointedTimeText}}</view>
    <view class="space_top">
        <wux-tabs scroll controlled current="{{currentTabDateText}}" theme="positive" bindchange="onTabChanged">
            <block wx:for={{dates}} wx:key="dateText">
                <wux-tab key="{{item.dateText}}">
                    <view>{{item.weekInDay}} {{item.monthDay}}</view>
                </wux-tab>
            </block>
        </wux-tabs>
    </view>
    <view class="space_top">
        <block wx:for={{clocks}} wx:key="desc">
            <wux-col span="3">
                <view wx:if={{item.preserved}} class="border wux-dark--border space time_label">
                    <view disabled class="text_gray">{{item.desc}}</view>
                    <view class="preserved_text text_normal">已约满</view>
                </view>
                <view wx:elif={{item.selected}} class="border wux-balanced--border space time_label wux-balanced">{{item.desc}}</view>
                <view wx:else class="border wux-dark--border space time_label" bindtap="onTimeSelected" data-id={{item.index}}>{{item.desc}}</view>
            </wux-col>
        </block>
    </view>
</view>

</template>
<style lang="scss">
@import "../../css/main";

.time_label{
    display:flex;
    flex-direction: column;
    justify-content: center;
    height:80rpx;
    border-radius: 10rpx;
    text-align: center;
}
.preserved_text{
    background-color:#aaa;
}
</style>