<script>
import {Page} from "@wxa/core"

@Page
export default class AppointItem{
    data={
        types:null,
        currentTypeId:1,
        selectedAppointmentItems:null,
        selectedIds:null,
        optionItems:null
    };
    onLoad(){
        let allTypes=this.getAllTypes();
        this.data.types=allTypes;
        if(allTypes){
            this.data.currentTypeId=allTypes[0].typeId;
        }
        let selectedItems=getApp().globalData.selectedAppointmentItems;
        this.data.selectedAppointmentItems=selectedItems?selectedItems:[];

        let optionItems=this.getOptionItems(this.data.currentTypeId);
        let selectedIds=this.getSelectedIds(this.data.selectedAppointmentItems);
        this.setData({
            types:allTypes,
            optionItems:optionItems,
            selectedIds:selectedIds
        });
    }
    onTabChanged(e){
        let typeId=e.detail.key;
        this.data.currentTypeId=typeId;
        let optionItems=this.getOptionItems(this.data.currentTypeId);
        let selectedIds=this.getSelectedIds(this.data.selectedAppointmentItems);
        this.setData({
            optionItems:optionItems,
            selectedIds:selectedIds
        });
    }

    onCheckChanged(e){
        const {value}=e.detail;
        if(this.data.selectedAppointmentItems){

        }
        let index=this.data.selectedAppointmentItems.findIndex(p=>p.productId==value);
        let idIndex=this.data.selectedIds.findIndex(p=>p==value);
        if(index>=0){
            this.data.selectedAppointmentItems.splice(index,1);
            this.data.selectedIds.splice(idIndex,1);
        }else{
            let item=this.data.optionItems.find(p=>p.productId==value);
            this.data.selectedAppointmentItems.push(item);
            this.data.selectedIds.push(value);
        }
        this.setData({
            selectedIds:this.data.selectedIds
        });
        this.$eventbus.emit("appointment_items_changed_event",{items:this.data.selectedAppointmentItems});
    }

    getAllTypes(){
        //todo 从服务器获取被选项
        let types=[
            {
                'typeId':1,
                'typeName':'美容洗澡',
                'items':[
                    {
                        'typeId':1,
                        'productId':1,
                        'productName':'美容'
                    },
                    {
                        'typeId':1,
                        'productId':2,
                        'productName':'洗澡'
                    },
                ]
            },
            {
                'typeId':2,
                'typeName':'诊疗',
                'items':[
                    {
                        'typeId':2,
                        'productId':3,
                        'productName':'疫苗'
                    },
                    {
                        'typeId':2,
                        'productId':4,
                        'productName':'诊断'
                    },
                    {
                        'typeId':2,
                        'productId':5,
                        'productName':'驱虫'
                    }
                ]
            }
        ];
        return types;
    }

    getOptionItems(typeId){
        return this.data.types.find(p=>p.typeId==typeId).items;
    }
    //选中的Id
    getSelectedIds(selectedItems){
        let typeId=this.data.currentTypeId;
        let ids=[];
        if(selectedItems){
            selectedItems.forEach(p=>{
                if(p.typeId==typeId){
                    ids.push(p.productId+'');
                }
            });
        }
        return ids;
    }
    
}
</script>
<config>
{
    "navigationBarTitleText": "服务项目",
    "usingComponents": {
        "wux-tabs": "../../wux-weapp/dist/tabs/index",
        "wux-tab": "../../wux-weapp/dist/tab/index",
        "wux-button": "../../wux-weapp/dist/button/index",
        "wux-icon": "../../wux-weapp/dist/icon/index",
        "wux-checkbox-group": "../../wux-weapp/dist/checkbox-group/index",
        "wux-checkbox": "../../wux-weapp/dist/checkbox/index"
    }
}
</config>
<template>
<view class="container">
    <view class="space_top">
        <wux-tabs defaultCurrent={{currentTypeId}} theme="positive" bindchange="onTabChanged">
            <block wx:for={{types}} wx:key="typeId">
                <wux-tab key="{{item.typeId}}" data-id={{item.typeId}}>
                    <view class="text_main">{{item.typeName}}</view>
                </wux-tab>
            </block>
        </wux-tabs>
    </view>
    <view class="space_top">
        <wux-checkbox-group name="a" value="{{selectedIds}}" bind:change="onCheckChanged">
            <block wx:for={{optionItems}} wx:key="productId">
                <wux-checkbox color="balanced" title="{{item.productName}}" value="{{item.productId}}" />
            </block>
        </wux-checkbox-group>
    </view>
</view>
</template>
<style lang="scss">

</style>